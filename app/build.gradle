apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'org.jetbrains.dokka'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.myparking"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        targetCompatibility = "1.8"
        sourceCompatibility = 1.8
    }
    dokka {
        outputFormat = 'gfm'
        outputDirectory = "docs"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // Gradle automatically adds 'android.test.runner' as a dependency.
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    //$buildDir/dokka
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.2.1'
    implementation 'androidx.navigation:navigation-ui:2.2.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.0.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.appyvet:materialrangebar:1.4.7'
    implementation 'com.github.bosphere.android-fadingedgelayout:fadingedgelayout:1.0.0'
    implementation 'com.yarolegovich:discrete-scrollview:1.4.9'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'

    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation project(path: ':spacelib')

    // Glide dependency
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    // Lifecycle components
    def archLifecycleVersion = '1.1.1'
    implementation "android.arch.lifecycle:extensions:$archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$archLifecycleVersion"

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation 'com.squareup.retrofit2:retrofit-converters:2.7.1'
    implementation 'com.squareup.retrofit2:retrofit-adapters:2.7.1'

    //facebook login
    implementation 'com.facebook.android:facebook-login:[5,6)'
/*
    // dagger2
    ext.dagger2_version = '2.23'
    // Basic Dagger 2 (required)
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    // dagger.android package (optional)
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    // Support library support (optional)
    kapt "com.google.dagger:dagger-android-support:$dagger2_version"*/


    kapt "com.android.databinding:compiler:$android_plugin_version"
    // qr code scanner
    implementation 'com.budiyev.android:code-scanner:2.1.0'

/*    // localdatetime for api level < 26
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'*/

    // tests dependcies
    // Core library
    androidTestImplementation 'androidx.test:core:1.0.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.0.0'
    androidTestImplementation 'androidx.test.ext:truth:1.0.0'
    androidTestImplementation 'com.google.truth:truth:0.42'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.1.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.1.0'
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.0.0'
    // Optional -- Mockito framework
    // testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.mockito:mockito-inline:2.7.21'
    // wrapper better
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
    testImplementation("com.squareup.okhttp3:mockwebserver:3.8.0")


}
androidExtensions {
    experimental = true
}
